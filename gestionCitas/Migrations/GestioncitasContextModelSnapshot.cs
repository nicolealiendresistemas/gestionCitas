// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gestionCitas.Models;

#nullable disable

namespace gestionCitas.Migrations
{
    [DbContext(typeof(GestioncitasContext))]
    partial class GestioncitasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("gestionCitas.Models.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<int?>("MedicoId")
                        .HasColumnType("int")
                        .HasColumnName("medico_id");

                    b.Property<string>("Motivo")
                        .HasColumnType("text")
                        .HasColumnName("motivo");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int")
                        .HasColumnName("paciente_id");

                    b.HasKey("Id")
                        .HasName("PK__citas__3213E83F912C847D");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("citas", (string)null);
                });

            modelBuilder.Entity("gestionCitas.Models.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CitaId")
                        .HasColumnType("int")
                        .HasColumnName("cita_id");

                    b.Property<string>("Diagnostico")
                        .HasColumnType("text")
                        .HasColumnName("diagnostico");

                    b.Property<DateTime?>("FechaConsulta")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_consulta");

                    b.Property<string>("Observaciones")
                        .HasColumnType("text")
                        .HasColumnName("observaciones");

                    b.HasKey("Id")
                        .HasName("PK__consulta__3213E83F01E851CB");

                    b.HasIndex("CitaId");

                    b.ToTable("consultas", (string)null);
                });

            modelBuilder.Entity("gestionCitas.Models.Especialidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PK__especial__3213E83F9A946669");

                    b.ToTable("especialidades", (string)null);
                });

            modelBuilder.Entity("gestionCitas.Models.FichasMedica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CitaId")
                        .HasColumnType("int")
                        .HasColumnName("cita_id");

                    b.Property<string>("Diagnostico")
                        .HasColumnType("text")
                        .HasColumnName("diagnostico");

                    b.Property<string>("Observaciones")
                        .HasColumnType("text")
                        .HasColumnName("observaciones");

                    b.Property<string>("Tratamiento")
                        .HasColumnType("text")
                        .HasColumnName("tratamiento");

                    b.HasKey("Id")
                        .HasName("PK__fichas_m__3213E83FEC33AAFA");

                    b.HasIndex("CitaId");

                    b.ToTable("fichas_medicas", (string)null);
                });

            modelBuilder.Entity("gestionCitas.Models.HistorialMedico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConsultaId")
                        .HasColumnType("int")
                        .HasColumnName("consulta_id");

                    b.Property<string>("Diagnostico")
                        .HasColumnType("text")
                        .HasColumnName("diagnostico");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_registro");

                    b.Property<string>("Observaciones")
                        .HasColumnType("text")
                        .HasColumnName("observaciones");

                    b.Property<string>("Tratamiento")
                        .HasColumnType("text")
                        .HasColumnName("tratamiento");

                    b.HasKey("Id")
                        .HasName("PK__historia__3213E83FFC81D3D1");

                    b.HasIndex("ConsultaId");

                    b.ToTable("historial_medico", (string)null);
                });

            modelBuilder.Entity("gestionCitas.Models.HorariosMedico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaSemana")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dia_semana");

                    b.Property<TimeOnly?>("HoraFin")
                        .HasColumnType("time")
                        .HasColumnName("hora_fin");

                    b.Property<TimeOnly?>("HoraInicio")
                        .HasColumnType("time")
                        .HasColumnName("hora_inicio");

                    b.Property<int?>("MedicoId")
                        .HasColumnType("int")
                        .HasColumnName("medico_id");

                    b.HasKey("Id")
                        .HasName("PK__horarios__3213E83FE510813F");

                    b.HasIndex("MedicoId");

                    b.ToTable("horarios_medicos", (string)null);
                });

            modelBuilder.Entity("gestionCitas.Models.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<int?>("EspecialidadId")
                        .HasColumnType("int")
                        .HasColumnName("especialidad_id");

                    b.Property<TimeOnly?>("HorarioConsultaFin")
                        .HasColumnType("time")
                        .HasColumnName("horario_consulta_fin");

                    b.Property<TimeOnly?>("HorarioConsultaInicio")
                        .HasColumnType("time")
                        .HasColumnName("horario_consulta_inicio");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("PK__medicos__3213E83F230CA830");

                    b.HasIndex("EspecialidadId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("medicos", (string)null);
                });

            modelBuilder.Entity("gestionCitas.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .HasColumnType("text")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateOnly?>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono");

                    b.HasKey("Id")
                        .HasName("PK__paciente__3213E83F7624F51C");

                    b.ToTable("pacientes", (string)null);
                });

            modelBuilder.Entity("gestionCitas.Models.Receta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConsultaId")
                        .HasColumnType("int")
                        .HasColumnName("consulta_id");

                    b.Property<string>("Dosis")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("dosis");

                    b.Property<string>("Instrucciones")
                        .HasColumnType("text")
                        .HasColumnName("instrucciones");

                    b.Property<string>("Medicamento")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("medicamento");

                    b.HasKey("Id")
                        .HasName("PK__recetas__3213E83F8A3020E9");

                    b.HasIndex("ConsultaId");

                    b.ToTable("recetas", (string)null);
                });

            modelBuilder.Entity("gestionCitas.Models.Recordatorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CitaId")
                        .HasColumnType("int")
                        .HasColumnName("cita_id");

                    b.Property<DateTime?>("FechaEnvio")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_envio");

                    b.Property<string>("Mensaje")
                        .HasColumnType("text")
                        .HasColumnName("mensaje");

                    b.Property<string>("MetodoEnvio")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("metodo_envio");

                    b.HasKey("Id")
                        .HasName("PK__recordat__3213E83FE9E22727");

                    b.HasIndex("CitaId");

                    b.ToTable("recordatorios", (string)null);
                });

            modelBuilder.Entity("gestionCitas.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PK__roles__3213E83F2B868415");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("gestionCitas.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Usuario1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario");

                    b.HasKey("Id")
                        .HasName("PK__usuarios__3213E83F015CE0A2");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("gestionCitas.Models.UsuarioRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaAsignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_asignacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rol_id");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("PK__usuario___3213E83F3A4A45A1");

                    b.HasIndex("RolId");

                    b.HasIndex(new[] { "UsuarioId", "RolId" }, "UQ_usuario_rol")
                        .IsUnique()
                        .HasFilter("[usuario_id] IS NOT NULL AND [rol_id] IS NOT NULL");

                    b.ToTable("usuario_rol", (string)null);
                });

            modelBuilder.Entity("gestionCitas.Models.Cita", b =>
                {
                    b.HasOne("gestionCitas.Models.Medico", "Medico")
                        .WithMany("Cita")
                        .HasForeignKey("MedicoId")
                        .HasConstraintName("FK__citas__medico_id__5CD6CB2B");

                    b.HasOne("gestionCitas.Models.Paciente", "Paciente")
                        .WithMany("Cita")
                        .HasForeignKey("PacienteId")
                        .HasConstraintName("FK__citas__paciente___5BE2A6F2");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("gestionCitas.Models.Consulta", b =>
                {
                    b.HasOne("gestionCitas.Models.Cita", "Cita")
                        .WithMany("Consulta")
                        .HasForeignKey("CitaId")
                        .HasConstraintName("FK__consultas__cita___68487DD7");

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("gestionCitas.Models.FichasMedica", b =>
                {
                    b.HasOne("gestionCitas.Models.Cita", "Cita")
                        .WithMany("FichasMedicas")
                        .HasForeignKey("CitaId")
                        .HasConstraintName("FK__fichas_me__cita___656C112C");

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("gestionCitas.Models.HistorialMedico", b =>
                {
                    b.HasOne("gestionCitas.Models.Consulta", "Consulta")
                        .WithMany("HistorialMedicos")
                        .HasForeignKey("ConsultaId")
                        .HasConstraintName("FK__historial__consu__6E01572D");

                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("gestionCitas.Models.HorariosMedico", b =>
                {
                    b.HasOne("gestionCitas.Models.Medico", "Medico")
                        .WithMany("HorariosMedicos")
                        .HasForeignKey("MedicoId")
                        .HasConstraintName("FK__horarios___medic__628FA481");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("gestionCitas.Models.Medico", b =>
                {
                    b.HasOne("gestionCitas.Models.Especialidade", "Especialidad")
                        .WithMany("Medicos")
                        .HasForeignKey("EspecialidadId")
                        .HasConstraintName("FK__medicos__especia__59063A47");

                    b.HasOne("gestionCitas.Models.Usuario", "Usuario")
                        .WithMany("Medicos")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__medicos__usuario__5812160E");

                    b.Navigation("Especialidad");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("gestionCitas.Models.Receta", b =>
                {
                    b.HasOne("gestionCitas.Models.Consulta", "Consulta")
                        .WithMany("Receta")
                        .HasForeignKey("ConsultaId")
                        .HasConstraintName("FK__recetas__consult__6B24EA82");

                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("gestionCitas.Models.Recordatorio", b =>
                {
                    b.HasOne("gestionCitas.Models.Cita", "Cita")
                        .WithMany("Recordatorios")
                        .HasForeignKey("CitaId")
                        .HasConstraintName("FK__recordato__cita___5FB337D6");

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("gestionCitas.Models.UsuarioRol", b =>
                {
                    b.HasOne("gestionCitas.Models.Role", "Rol")
                        .WithMany("UsuarioRols")
                        .HasForeignKey("RolId")
                        .HasConstraintName("FK__usuario_r__rol_i__5165187F");

                    b.HasOne("gestionCitas.Models.Usuario", "Usuario")
                        .WithMany("UsuarioRols")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__usuario_r__usuar__5070F446");

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("gestionCitas.Models.Cita", b =>
                {
                    b.Navigation("Consulta");

                    b.Navigation("FichasMedicas");

                    b.Navigation("Recordatorios");
                });

            modelBuilder.Entity("gestionCitas.Models.Consulta", b =>
                {
                    b.Navigation("HistorialMedicos");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("gestionCitas.Models.Especialidade", b =>
                {
                    b.Navigation("Medicos");
                });

            modelBuilder.Entity("gestionCitas.Models.Medico", b =>
                {
                    b.Navigation("Cita");

                    b.Navigation("HorariosMedicos");
                });

            modelBuilder.Entity("gestionCitas.Models.Paciente", b =>
                {
                    b.Navigation("Cita");
                });

            modelBuilder.Entity("gestionCitas.Models.Role", b =>
                {
                    b.Navigation("UsuarioRols");
                });

            modelBuilder.Entity("gestionCitas.Models.Usuario", b =>
                {
                    b.Navigation("Medicos");

                    b.Navigation("UsuarioRols");
                });
#pragma warning restore 612, 618
        }
    }
}
